#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
typedef struct stack{
char* s;
int size;
int top;
}stack;
void push(stack* x , char val){
if(x->top < x->size-1){
x->top++;
x->s[x->top] = val;
}

}
bool isEmpty(stack *x){
if(x->top == -1){
    return 1;
}
return 0;

}
void pop(stack *x){
int y = -1;
if(isEmpty(x)){
    printf("Stack Underflow\n");
}
else{
    y = x->s[x->top];
    x->top--;
}
return y;
}


int is_balance(char* exp){
stack first;
first.size = strlen(exp);
first.top = -1;
first.s =(char*)malloc(sizeof(char)*strlen(exp));
for(int i = 0 ; exp[i] != '\0' ; i++){
        if(exp[i] == '('){
            push(&first , exp[i]);
           }
           else if(exp[i] == ')'){
               if(isEmpty(&first)){
                return 0;
               }
               pop(&first);
           }

}
return isEmpty(&first)?true:false;

}
int main()
{
char exp[] = "((a+b)*(c-d))";
printf("%s\n" , exp);
printf("%d" , is_balance(exp));
return 0;
}
