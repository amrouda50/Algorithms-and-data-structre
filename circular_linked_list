#include <stdio.h>
#include <stdlib.h>
typedef struct Node{
int data;
struct node* next;
}Node;
Node* first;
void create(int A[] , int N){
first = (Node*)malloc(sizeof(Node));
Node* last = (Node *)malloc(sizeof(Node));
first->data = A[0];
first->next = NULL;
last = first;
for(int i = 1 ; i < N ; i++){
Node* t = (Node *)malloc(sizeof(Node));
t->data = A[i];
t->next = NULL;
last->next = t;
last = t;
}
last->next = first;
}
void print(Node* x){
do{
    printf("%d " , x->data);
    x = x->next;
}while(x != first);
printf("\n");

}
void insert(Node* x , int index , int value){
Node* t = (Node*)malloc(sizeof(Node));
t->data = value;
int i ;
if(index == 0){
    while(x->next != first){
     x = x->next;
    }
    x->next = t;
    t->next = first;
    first = t;
}
else{
    for(i = 0 ; i < index-1;i++){
        x = x->next;
    }
    t->next = x->next;
    x->next = t;
}

}
void del(Node* x , int index){
Node* q = (Node*)malloc(sizeof(Node));
Node* p = (Node*)malloc(sizeof(Node));
p = first;

if(index == 0){
while(x->next != first){
x = x->next;
}
x->next = first ->next;
free(first);
first = x->next;

}
for(int i = 0 ; i < index-1;i++){
    q = p;
    p = p->next;
}
q->next = p->next;
p->next = NULL;
free(p);


}
int main()
{
    int A[5] = {50,40,30,0,55};
    int size = sizeof(A)/sizeof(A[0]);

    create(A , size);
    insert(first , 0 , 25);
    insert(first , 4, 54);
    del(first , 0);
    print(first);
    return 0;
}
